package main

import (
	"github.com/gotranspile/cxgo/runtime/libc"
	"unsafe"
)

var circlemud_version *byte = libc.CString("CircleMUD, version 3.1")
var oasisolc_version *byte = libc.CString("OasisOLC 2.0.6")
var ascii_pfiles_version *byte = libc.CString("ASCII Player Files 3.0.1")
var attack_names_comp [15]*byte = [15]*byte{libc.CString("Kamehameha"), libc.CString("Galik Gun"), libc.CString("Masenko"), libc.CString("Deathbeam"), libc.CString("Honoo"), libc.CString("Twin Slash"), libc.CString("Hell Flash"), libc.CString("Psychic Blast"), libc.CString("Crusher Ball"), libc.CString("Water Spikes"), libc.CString("Tribeam"), libc.CString("Star Breaker"), libc.CString("Seishou Enko"), libc.CString("Renzokou Energy Dan"), libc.CString("\n")}
var attack_names [15]*byte = [15]*byte{libc.CString("kamehameha"), libc.CString("galik gun"), libc.CString("masenko"), libc.CString("deathbeam"), libc.CString("honoo"), libc.CString("twin slash"), libc.CString("hell flash"), libc.CString("psychic blast"), libc.CString("crusher ball"), libc.CString("water spikes"), libc.CString("tribeam"), libc.CString("star breaker"), libc.CString("seishou enko"), libc.CString("renzokou energy dan"), libc.CString("\n")}
var attack_skills [14]int = [14]int{464, 444, 441, 472, 476, 474, 488, 475, 485, 510, 482, 533, 528, 440}
var npc_personality [6]*byte = [6]*byte{libc.CString("Basic"), libc.CString("Careful"), libc.CString("Aggressive"), libc.CString("Arrogant"), libc.CString("Intelligent"), libc.CString("\n")}
var sensei_style [15]*byte = [15]*byte{libc.CString("Kame Arts"), libc.CString("Demon Taijutsu"), libc.CString("Crane Arts"), libc.CString("Tranquil Palm"), libc.CString("Brutal Beast"), libc.CString("Flaunted Style"), libc.CString("Frozen Fist"), libc.CString("Shadow Grappling"), libc.CString("Iron Hand"), libc.CString("Devil Dance"), libc.CString("Gentle Fist"), libc.CString("Star's Radiance"), libc.CString("Sacred Tsunami"), libc.CString("Adaptive Taijutsu"), libc.CString("\n")}
var alignments [10]*byte = [10]*byte{libc.CString("Saintly"), libc.CString("Valiant"), libc.CString("Hero"), libc.CString("Do-gooder"), libc.CString("Neutral"), libc.CString("Crook"), libc.CString("Villain"), libc.CString("Terrible"), libc.CString("Horribly Evil"), libc.CString("\n")}
var aura_types [9]*byte = [9]*byte{libc.CString("white"), libc.CString("blue"), libc.CString("red"), libc.CString("green"), libc.CString("pink"), libc.CString("purple"), libc.CString("yellow"), libc.CString("black"), libc.CString("orange")}
var armor_type [6]*byte = [6]*byte{libc.CString("Undefined"), libc.CString("Light"), libc.CString("Medium"), libc.CString("Heavy"), libc.CString("Shield"), libc.CString("\n")}
var weapon_type [28]*byte = [28]*byte{libc.CString("undefined"), libc.CString("unarmed"), libc.CString("dagger"), libc.CString("mace"), libc.CString("sickle"), libc.CString("spear"), libc.CString("staff"), libc.CString("crossbow"), libc.CString("longbow"), libc.CString("shortbow"), libc.CString("sling"), libc.CString("shuriken"), libc.CString("hammer"), libc.CString("lance"), libc.CString("flail"), libc.CString("longsword"), libc.CString("shortsword"), libc.CString("greatsword"), libc.CString("rapier"), libc.CString("scimitar"), libc.CString("polearm"), libc.CString("club"), libc.CString("bastard sword"), libc.CString("monk weapon"), libc.CString("double weapon"), libc.CString("axe"), libc.CString("whip"), libc.CString("\n")}
var crit_type [4]*byte = [4]*byte{libc.CString("x2"), libc.CString("x3"), libc.CString("x4"), libc.CString("\n")}
var dirs [13]*byte = [13]*byte{libc.CString("north"), libc.CString("east"), libc.CString("south"), libc.CString("west"), libc.CString("up"), libc.CString("down"), libc.CString("northwest"), libc.CString("northeast"), libc.CString("southeast"), libc.CString("southwest"), libc.CString("inside"), libc.CString("outside"), libc.CString("\n")}
var abbr_dirs [13]*byte = [13]*byte{libc.CString("n"), libc.CString("e"), libc.CString("s"), libc.CString("w"), libc.CString("u"), libc.CString("d"), libc.CString("nw"), libc.CString("ne"), libc.CString("se"), libc.CString("sw"), libc.CString("in"), libc.CString("out"), libc.CString("\n")}
var eye_types [13]*byte = [13]*byte{libc.CString("blue"), libc.CString("black"), libc.CString("green"), libc.CString("brown"), libc.CString("red"), libc.CString("aqua"), libc.CString("pink"), libc.CString("purple"), libc.CString("crimson"), libc.CString("gold"), libc.CString("amber"), libc.CString("emerald"), libc.CString("\n")}
var hairl_types [6]*byte = [6]*byte{libc.CString("bald"), libc.CString("short"), libc.CString("medium"), libc.CString("long"), libc.CString("really long"), libc.CString("\n")}
var FHA_types [6]*byte = [6]*byte{libc.CString("stubby"), libc.CString("short"), libc.CString("medium"), libc.CString("long"), libc.CString("really long"), libc.CString("\n")}
var hairc_types [15]*byte = [15]*byte{libc.CString("headed"), libc.CString("black"), libc.CString("brown"), libc.CString("blonde"), libc.CString("grey"), libc.CString("red"), libc.CString("orange"), libc.CString("green"), libc.CString("blue"), libc.CString("pink"), libc.CString("purple"), libc.CString("silver"), libc.CString("crimson"), libc.CString("white"), libc.CString("\n")}
var hairs_types [13]*byte = [13]*byte{libc.CString(""), libc.CString("with a plain look"), libc.CString("in a mohawk"), libc.CString("with a spiky look"), libc.CString("with a curly look"), libc.CString("with an uneven look"), libc.CString("in a ponytail"), libc.CString("in an afro"), libc.CString("with a fade look"), libc.CString("in a crew cut"), libc.CString("with a feathered look"), libc.CString("in dred locks"), libc.CString("\n")}
var skin_types [13]*byte = [13]*byte{libc.CString("white"), libc.CString("black"), libc.CString("green"), libc.CString("orange"), libc.CString("yellow"), libc.CString("red"), libc.CString("grey"), libc.CString("blue"), libc.CString("aqua"), libc.CString("pink"), libc.CString("purple"), libc.CString("tan"), libc.CString("\n")}
var zone_bits [37]*byte = [37]*byte{libc.CString("CLOSED"), libc.CString("NO_IMMORT"), libc.CString("QUEST"), libc.CString("DBALL_LOAD"), libc.CString("SPARE2"), libc.CString("SPARE3"), libc.CString("SPARE4"), libc.CString("SPARE5"), libc.CString("SPARE6"), libc.CString("SPARE7"), libc.CString("SPARE8"), libc.CString("SPARE9"), libc.CString("SPARE10"), libc.CString("SPARE11"), libc.CString("SPARE12"), libc.CString("SPARE13"), libc.CString("SPARE14"), libc.CString("SPARE15"), libc.CString("SPARE16"), libc.CString("SPARE17"), libc.CString("SPARE18"), libc.CString("SPARE19"), libc.CString("SPARE20"), libc.CString("SPARE21"), libc.CString("SPARE22"), libc.CString("SPARE23"), libc.CString("SPARE24"), libc.CString("SPARE25"), libc.CString("SPARE26"), libc.CString("SPARE27"), libc.CString("SPARE28"), libc.CString("SPARE29"), libc.CString("SPARE30"), libc.CString("SPARE31"), libc.CString("SPARE32"), libc.CString("SPARE33"), libc.CString("\n")}
var room_bits [67]*byte = [67]*byte{libc.CString("DARK"), libc.CString("DEATH"), libc.CString("NO_MOB"), libc.CString("LIGHT"), libc.CString("PEACEFUL"), libc.CString("SOUNDPROOF"), libc.CString("NO_TRACK"), libc.CString("NO_INSTANT"), libc.CString("TUNNEL"), libc.CString("PRIVATE"), libc.CString("GODROOM"), libc.CString("HOUSE"), libc.CString("HCRSH"), libc.CString("ATRIUM"), libc.CString("OLC"), libc.CString("*"), libc.CString("VEHICLE"), libc.CString("UNDERGROUND"), libc.CString("CURRENT"), libc.CString("TIMED_DT"), libc.CString("EARTH"), libc.CString("VEGETA"), libc.CString("FRIGID"), libc.CString("KONACK"), libc.CString("NAMEK"), libc.CString("NEO"), libc.CString("AL"), libc.CString("SPACE"), libc.CString("Punishment Hell"), libc.CString("Regen"), libc.CString("Hell"), libc.CString("GravX10"), libc.CString("Aether"), libc.CString("HBTC"), libc.CString("Past"), libc.CString("CBANK"), libc.CString("SHIP"), libc.CString("YARDRAT"), libc.CString("KANASSA"), libc.CString("ARLIA"), libc.CString("AURA"), libc.CString("EARTHORB"), libc.CString("FRIGIDOR"), libc.CString("KONACKOR"), libc.CString("NAMEKORB"), libc.CString("VEGETAOR"), libc.CString("AETHEROR"), libc.CString("YARDRAOR"), libc.CString("KANASSOR"), libc.CString("ARLIAORB"), libc.CString("NEBULA"), libc.CString("ASTEROID"), libc.CString("WORMHOLE"), libc.CString("SSTATION"), libc.CString("ISSTAR"), libc.CString("CERRIA"), libc.CString("CERORBIT"), libc.CString("BEDROOM"), libc.CString("WORKOUT"), libc.CString("GARDEN"), libc.CString("GREENHOUSE"), libc.CString("FERTILE1"), libc.CString("FERTILE2"), libc.CString("FISHING"), libc.CString("FRESHWATFISH"), libc.CString("CANREMODEL"), libc.CString("\n")}
var exit_bits [6]*byte = [6]*byte{libc.CString("DOOR"), libc.CString("CLOSED"), libc.CString("LOCKED"), libc.CString("PICKPROOF"), libc.CString("SECRET"), libc.CString("\n")}
var sector_types [16]*byte = [16]*byte{libc.CString("Inside"), libc.CString("City"), libc.CString("Plain"), libc.CString("Forest"), libc.CString("Hills"), libc.CString("Mountains"), libc.CString("Shallows"), libc.CString("Water (Fly)"), libc.CString("Sky"), libc.CString("Underwater"), libc.CString("$Shop"), libc.CString("#Important"), libc.CString("Desert"), libc.CString("Space"), libc.CString("Lava"), libc.CString("\n")}
var genders [4]*byte = [4]*byte{libc.CString("neutral"), libc.CString("male"), libc.CString("female"), libc.CString("\n")}
var position_types [10]*byte = [10]*byte{libc.CString("Dead"), libc.CString("Mortally wounded"), libc.CString("Incapacitated"), libc.CString("Stunned"), libc.CString("Sleeping"), libc.CString("Resting"), libc.CString("Sitting"), libc.CString("Fighting"), libc.CString("Standing"), libc.CString("\n")}
var song_types [13]*byte = [13]*byte{libc.CString("\n"), libc.CString("Safety"), libc.CString("Shielding"), libc.CString("Shadow Stitch"), libc.CString("Teleportation"), libc.CString("Teleportation"), libc.CString("Teleportation"), libc.CString("Teleportation"), libc.CString("Teleportation"), libc.CString("Teleportation"), libc.CString("Teleportation"), libc.CString("Teleportation"), libc.CString("\n")}
var player_bits [81]*byte = [81]*byte{libc.CString("KILLER"), libc.CString("ROGUE"), libc.CString("FROZEN"), libc.CString("DONTSET"), libc.CString("WRITING"), libc.CString("MAILING"), libc.CString("CSH"), libc.CString("SITEOK"), libc.CString("MUTED"), libc.CString("NOTITLE"), libc.CString("DELETED"), libc.CString("LOADRM"), libc.CString("NO_WIZL"), libc.CString("NO_DEL"), libc.CString("INVST"), libc.CString("CRYO"), libc.CString("DEAD"), libc.CString("MID_AGE_POS"), libc.CString("MID_AGE_NEG"), libc.CString("OLD_AGE_POS"), libc.CString("OLD_AGE_NEG"), libc.CString("VEN_AGE_POS"), libc.CString("VEN_AGE_NEG"), libc.CString("RIP_OLD_AGE"), libc.CString("RARM"), libc.CString("LARM"), libc.CString("RLEG"), libc.CString("LLEG"), libc.CString("HEAD"), libc.CString("STAIL"), libc.CString("TAIL"), libc.CString("PILOTING"), libc.CString("CCONLY"), libc.CString("Spar"), libc.CString("Charging"), libc.CString("Trans1"), libc.CString("Trans2"), libc.CString("Trans3"), libc.CString("Trans4"), libc.CString("Trans5"), libc.CString("Trans6"), libc.CString("Absorb"), libc.CString("Repair"), libc.CString("Powsen"), libc.CString("POWERUP"), libc.CString("KO"), libc.CString("CRARM"), libc.CString("CLARM"), libc.CString("CRLEG"), libc.CString("CLLEG"), libc.CString("FPSSJ"), libc.CString("IMMORTALITY"), libc.CString("EYECLOSED"), libc.CString("DISGUISED"), libc.CString("BANDAGE"), libc.CString("PR"), libc.CString("HEALT"), libc.CString("FURY"), libc.CString("POSE"), libc.CString("OOZARU"), libc.CString("ABSORBED"), libc.CString("MULTP"), libc.CString("PDEATH"), libc.CString("THANDW"), libc.CString("SELFD"), libc.CString("SELFD2"), libc.CString("SPIRAL"), libc.CString("BIOGR"), libc.CString("LSSJ"), libc.CString("RLEARN"), libc.CString("FORGET"), libc.CString("TRANSMISSION"), libc.CString("FISHING"), libc.CString("GOOCHUNKS"), libc.CString("MULTIHIT"), libc.CString("AURALIGHT"), libc.CString("RDISPLAY"), libc.CString("ROBBED"), libc.CString("TAILH"), libc.CString("NOGROW"), libc.CString("\n")}
var action_bits [36]*byte = [36]*byte{libc.CString("SPEC"), libc.CString("SENTINEL"), libc.CString("NOSCAVENGER"), libc.CString("ISNPC"), libc.CString("AWARE"), libc.CString("AGGR"), libc.CString("STAY-ZONE"), libc.CString("WIMPY"), libc.CString("AGGR_EVIL"), libc.CString("AGGR_GOOD"), libc.CString("AGGR_NEUTRAL"), libc.CString("MEMORY"), libc.CString("HELPER"), libc.CString("NO_CHARM"), libc.CString("NO_SUMMN"), libc.CString("NO_SLEEP"), libc.CString("AUTOBALANCE"), libc.CString("NO_BLIND"), libc.CString("NO_KILL"), libc.CString("DEAD"), libc.CString("MOUNTABLE"), libc.CString("Right Arm"), libc.CString("Left Arm"), libc.CString("Right Leg"), libc.CString("Left Leg"), libc.CString("Head"), libc.CString("JUST_DESC"), libc.CString("HUSK"), libc.CString("SPAR"), libc.CString("DUMMY"), libc.CString("ABSORB"), libc.CString("REPAIR"), libc.CString("NOPOISON"), libc.CString("KNOWKAIO"), libc.CString("POWERINGUP"), libc.CString("\n")}
var preference_bits [61]*byte = [61]*byte{libc.CString("BRIEF"), libc.CString("COMPACT"), libc.CString("DEAF"), libc.CString("NO_TELL"), libc.CString("D_HP"), libc.CString("D_MANA"), libc.CString("D_MOVE"), libc.CString("AUTOEX"), libc.CString("NO_HASS"), libc.CString("QUEST"), libc.CString("SUMN"), libc.CString("NO_REP"), libc.CString("LIGHT"), libc.CString("COLOR"), libc.CString("SPARE"), libc.CString("NO_WIZ"), libc.CString("L1"), libc.CString("L2"), libc.CString("NO_AUC"), libc.CString("NO_GOS"), libc.CString("NO_GTZ"), libc.CString("RMFLG"), libc.CString("D_AUTO"), libc.CString("CLS"), libc.CString("BLDWLK"), libc.CString("AFK"), libc.CString("AUTOLOOT"), libc.CString("AUTOGOLD"), libc.CString("AUTOSPLIT"), libc.CString("FULL_AUTOEX"), libc.CString("AUTOSAC"), libc.CString("AUTOMEM"), libc.CString("VIEWORDER"), libc.CString("NO_COMPRESS"), libc.CString("AUTOASSIST"), libc.CString("D_KI"), libc.CString("D_EXP"), libc.CString("D_TNL"), libc.CString("TESTING"), libc.CString("WHOHIDE"), libc.CString("NOMAILW"), libc.CString("HINTS"), libc.CString("FURYM"), libc.CString("NODEC"), libc.CString("NOEQSEE"), libc.CString("NOMUSIC"), libc.CString("LKEEP"), libc.CString("DISTIME"), libc.CString("DISGOLD"), libc.CString("DISPRAC"), libc.CString("NOPARRY"), libc.CString("H-T"), libc.CString("PERCENT"), libc.CString("CARVE"), libc.CString("ARENAW"), libc.CString("NOGIVE"), libc.CString("INSTRUCT"), libc.CString("GHEALTH"), libc.CString("IHEALTH"), libc.CString("ENERGIZE"), libc.CString("\n")}
var affected_bits [76]*byte = [76]*byte{libc.CString("\x00"), libc.CString("BLIND"), libc.CString("INVIS"), libc.CString("DET-ALIGN"), libc.CString("DET-INVIS"), libc.CString("DET-MAGIC"), libc.CString("SENSE-LIFE"), libc.CString("WATWALK"), libc.CString("BARRIER"), libc.CString("GROUP"), libc.CString("CURSE"), libc.CString("INFRAVISION"), libc.CString("POISON"), libc.CString("WEAKENED"), libc.CString("PROT-GOOD"), libc.CString("SLEEP"), libc.CString("NO_TRACK"), libc.CString("UNDEAD"), libc.CString("STONED"), libc.CString("SNEAK"), libc.CString("HIDE"), libc.CString("UNUSED"), libc.CString("CHARM"), libc.CString("FLYING"), libc.CString("WATER-BREATH"), libc.CString("ANGELIC"), libc.CString("ETHEREAL"), libc.CString("MAGICONLY"), libc.CString("NEXTPARTIAL"), libc.CString("NEXTNOACT"), libc.CString("STUNNED"), libc.CString("TAME"), libc.CString("CDEATH"), libc.CString("SPIRIT"), libc.CString("STONESKIN"), libc.CString("SUMMONED"), libc.CString("CELESTIAL"), libc.CString("FIENDISH"), libc.CString("FIRESHIELD"), libc.CString("LOW_LIGHT"), libc.CString("ZANZOKEN"), libc.CString("KO"), libc.CString("MIGHT"), libc.CString("FLEX"), libc.CString("GENIUS"), libc.CString("BLESS"), libc.CString("BURNT"), libc.CString("BURNED"), libc.CString("MBREAK"), libc.CString("HASS"), libc.CString("FS"), libc.CString("PARALYZE"), libc.CString("INFUSED"), libc.CString("ENLIGHT"), libc.CString("FROZOWNED"), libc.CString("FIRESHIELD"), libc.CString("ENSNARED"), libc.CString("HAYASA"), libc.CString("PURSUED"), libc.CString("WITHERED"), libc.CString("HYDROZAP"), libc.CString("POSITION"), libc.CString("SHOCKED"), libc.CString("METAMORPH"), libc.CString("HEALING-GLOW"), libc.CString("ALGIZ RUNE"), libc.CString("OAGAZ RUNE"), libc.CString("WUNJO RUNE"), libc.CString("PURISAZ RUNE"), libc.CString("ASHED"), libc.CString("PUKED"), libc.CString("LIQUEFIED"), libc.CString("SHELLED"), libc.CString("IMMUNITY"), libc.CString("SPIRITCONTROL"), libc.CString("\n")}
var connected_types [74]*byte = [74]*byte{libc.CString("Playing"), libc.CString("Disconnecting"), libc.CString("Get name"), libc.CString("Confirm name"), libc.CString("Get password"), libc.CString("Get new PW"), libc.CString("Confirm new PW"), libc.CString("Select sex"), libc.CString("Select class"), libc.CString("Reading MOTD"), libc.CString("Main Menu"), libc.CString("Get descript."), libc.CString("Changing PW 1"), libc.CString("Changing PW 2"), libc.CString("Changing PW 3"), libc.CString("Self-Delete 1"), libc.CString("Self-Delete 2"), libc.CString("Disconnecting"), libc.CString("Object edit"), libc.CString("Room edit"), libc.CString("Zone edit"), libc.CString("Mobile edit"), libc.CString("Shop edit"), libc.CString("Text edit"), libc.CString("Config edit"), libc.CString("Select race"), libc.CString("Assembly Edit"), libc.CString("Social edit"), libc.CString("Trigger Edit"), libc.CString("Race help"), libc.CString("Class help"), libc.CString("Query ANSI"), libc.CString("Guild edit"), libc.CString("Reroll stats"), libc.CString("iObject Edit"), libc.CString("Level Up"), libc.CString("Qstats"), libc.CString("Hair Length"), libc.CString("Hair Color"), libc.CString("Hair Style"), libc.CString("Skin Color"), libc.CString("Eye Color"), libc.CString("Start Q1"), libc.CString("Start Q2"), libc.CString("Start Q3"), libc.CString("Start Q4"), libc.CString("Start Q5"), libc.CString("Start Q6"), libc.CString("Start Q7"), libc.CString("Start Q8"), libc.CString("Start Q9"), libc.CString("Start Q10"), libc.CString("House Edit"), libc.CString("Alpha"), libc.CString("Alpha 2"), libc.CString("Android Menu"), libc.CString("Help Edit"), libc.CString("Get User"), libc.CString("Get Email"), libc.CString("Get UMenu"), libc.CString("Confirm User"), libc.CString("Dist. Feature"), libc.CString("Height/Weight"), libc.CString("Aura"), libc.CString("Bonus/Neg"), libc.CString("Bonus/Neg"), libc.CString("News Edit"), libc.CString("Racial Pref"), libc.CString("Player Obj Edit"), libc.CString("Align Menu"), libc.CString("Skills Menu"), libc.CString("User Title"), libc.CString("Genome Selection"), libc.CString("\n")}
var wear_where [24]*byte = [24]*byte{libc.CString("@c<@CUsed Somewhere     @c>@n "), libc.CString("@c<@CWorn On Finger     @c>@n "), libc.CString("@c<@CWorn On Finger     @c>@n "), libc.CString("@c<@CWorn Around Neck   @c>@n "), libc.CString("@c<@CWorn Around Neck   @c>@n "), libc.CString("@c<@CWorn On Body       @c>@n "), libc.CString("@c<@CWorn On Head       @c>@n "), libc.CString("@c<@CWorn On Legs       @c>@n "), libc.CString("@c<@CWorn On Feet       @c>@n "), libc.CString("@c<@CWorn On Hands      @c>@n "), libc.CString("@c<@CWorn On Arms       @c>@n "), libc.CString("@c<@CWorn Somewhere     @c>@n "), libc.CString("@c<@CWorn About Body    @c>@n "), libc.CString("@c<@CWorn About Waist   @c>@n "), libc.CString("@c<@CWorn Around Wrist  @c>@n "), libc.CString("@c<@CWorn Around Wrist  @c>@n "), libc.CString("@c<@CWielded            @c>@n "), libc.CString("@c<@COffhand            @c>@n "), libc.CString("@c<@CWorn On Back       @c>@n "), libc.CString("@c<@CWorn In Ear        @c>@n "), libc.CString("@c<@CWorn In Ear        @c>@n "), libc.CString("@c<@CWorn On Shoulders  @c>@n "), libc.CString("@c<@CWorn On Eye        @c>@n "), libc.CString("\n")}
var equipment_types [24]*byte = [24]*byte{libc.CString("Used as light"), libc.CString("Worn on right finger"), libc.CString("Worn on left finger"), libc.CString("First worn around Neck"), libc.CString("Second worn around Neck"), libc.CString("Worn on body"), libc.CString("Worn on head"), libc.CString("Worn on legs"), libc.CString("Worn on feet"), libc.CString("Worn on hands"), libc.CString("Worn on arms"), libc.CString("Worn as shield"), libc.CString("Worn about body"), libc.CString("Worn around waist"), libc.CString("Worn around right wrist"), libc.CString("Worn around left wrist"), libc.CString("Wielded"), libc.CString("Held"), libc.CString("Worn on back"), libc.CString("Worn in ear"), libc.CString("Worn in ear"), libc.CString("Worn on shoulders"), libc.CString("Worn on eye"), libc.CString("\n")}
var item_types [38]*byte = [38]*byte{libc.CString("UNDEFINED"), libc.CString("LIGHT"), libc.CString("SCROLL"), libc.CString("WAND"), libc.CString("STAFF"), libc.CString("WEAPON"), libc.CString("FIRE WEAPON"), libc.CString("CAMPFIRE"), libc.CString("TREASURE"), libc.CString("ARMOR"), libc.CString("SENSU"), libc.CString("WORN"), libc.CString("OTHER"), libc.CString("TRASH"), libc.CString("TRAP"), libc.CString("CONTAINER"), libc.CString("NOTE"), libc.CString("LIQCONTAINER"), libc.CString("KEY"), libc.CString("FOOD"), libc.CString("MONEY"), libc.CString("PEN"), libc.CString("BOAT"), libc.CString("FOUNTAIN"), libc.CString("VEHICLE"), libc.CString("HATCH"), libc.CString("WINDOW"), libc.CString("CONTROL"), libc.CString("PORTAL"), libc.CString("SPELLBOOK"), libc.CString("BOARD"), libc.CString("CHAIR"), libc.CString("BED"), libc.CString("YUM"), libc.CString("PLANT"), libc.CString("FISHINGPOLE"), libc.CString("FISHBAIT"), libc.CString("\n")}
var wear_bits [20]*byte = [20]*byte{libc.CString("TAKE"), libc.CString("FINGER"), libc.CString("NECK"), libc.CString("BODY"), libc.CString("HEAD"), libc.CString("LEGS"), libc.CString("FEET"), libc.CString("HANDS"), libc.CString("ARMS"), libc.CString("SHIELD"), libc.CString("ABOUT"), libc.CString("WAIST"), libc.CString("WRIST"), libc.CString("WIELD"), libc.CString("HOLD"), libc.CString("BACK"), libc.CString("EAR"), libc.CString("SHOULDERS"), libc.CString("SCOUTER"), libc.CString("\n")}
var extra_bits [97]*byte = [97]*byte{0: libc.CString("GLOW"), 1: libc.CString("HUM"), 2: libc.CString("NO_RENT"), 3: libc.CString("NO_DONATE"), 4: libc.CString("NO_INVIS"), 5: libc.CString("INVISIBLE"), 6: libc.CString("MAGIC"), 7: libc.CString("NO_DROP"), 8: libc.CString("BLESS"), 9: libc.CString("ANTI_GOOD"), 10: libc.CString("ANTI_EVIL"), 11: libc.CString("ANTI_NEUTRAL"), 12: libc.CString("ANTI_ROSHI"), 13: libc.CString("ANTI_PICCOLO"), 14: libc.CString("ANTI_KRANE"), 15: libc.CString("ANTI_NAIL"), 16: libc.CString("NO_SELL"), 17: libc.CString("ANTI_TAPION"), 18: libc.CString("2H"), 19: libc.CString("ANTI_ANDSIX"), 20: libc.CString("ANTI_DABURA"), 21: libc.CString("ANTI_GINYU"), 22: libc.CString("ANTI_HUMAN"), 23: libc.CString("ANTI_DWARF"), 24: libc.CString("ANTI_ELF"), 25: libc.CString("ANTI_GNOME"), 26: libc.CString("UNIQUE"), 27: libc.CString("BROKEN"), 28: libc.CString("UNBREAKABLE"), 29: libc.CString("ANTI_BARDOCK"), 30: libc.CString("ANTI_KABITO"), 31: libc.CString("ANTI_FRIEZA"), 32: libc.CString("DOUBLE"), 33: libc.CString("ONLY_ROSHI"), 34: libc.CString("ONLY_PICCOLO"), 35: libc.CString("ONLY_KRANE"), 36: libc.CString("ONLY_NAIL"), 37: libc.CString("ONLY_TAPION"), 38: libc.CString("ONLY_ANDSIX"), 39: libc.CString("ONLY_DABURA"), 40: libc.CString("ONLY_GINYU"), 41: libc.CString("ONLY_HUMAN"), 42: libc.CString("ONLY_ICER"), 43: libc.CString("ONLY_SAIYAN"), 44: libc.CString("ONLY_KONATSU"), 45: libc.CString("ONLY_BARDOCK"), 46: libc.CString("ONLY_KABITO"), 47: libc.CString("ONLY_FRIEZA"), 48: libc.CString("ANTI_ARC_ARCH"), 49: libc.CString("ANTI_ARC_TRICK"), 50: libc.CString("ANTI_KURZAK"), 51: libc.CString("ONLY_KURZAK"), 52: libc.CString("ANTI_BLACKGUARD"), 53: libc.CString("ANTI_DRAG_DIS"), 54: libc.CString("ANTI_DUEL"), 55: libc.CString("ANTI_DWAR_DEF"), 56: libc.CString("ANTI_EL_KNIGHT"), 57: libc.CString("ANTI_HIERO"), 58: libc.CString("ANTI_HORI_WALK"), 59: libc.CString("ANTI_LORE"), 60: libc.CString("ANTI_MYSTIC_TH"), 61: libc.CString("ANTI_SHADOW"), 62: libc.CString("ANTI_THAUM"), 63: libc.CString("Basic Scouter"), 64: libc.CString("Midi Scouter"), 65: libc.CString("Advanced Scouter"), 66: libc.CString("Ultra Scouter"), 67: libc.CString("Weapon Lvl 1"), 68: libc.CString("Weapon Lvl 2"), 69: libc.CString("Weapon Lvl 3"), 70: libc.CString("Weapon Lvl 4"), 71: libc.CString("Weapon Lvl 5"), 72: libc.CString("Clan Board"), 73: libc.CString("FORGED"), 74: libc.CString("SHEATH"), 75: libc.CString("ONLY_JINTO"), 76: libc.CString("BURIED"), 77: libc.CString("SLOT1"), 78: libc.CString("SLOT2"), 79: libc.CString("Token"), 80: libc.CString("ONEFILL"), 81: libc.CString("FILLED"), 82: libc.CString("RESTRING"), 83: libc.CString("CUSTOM"), 84: libc.CString("PROTECTED"), 85: libc.CString("NORANDOMSTATS"), 86: libc.CString("THROW"), 87: libc.CString("HOT"), 88: libc.CString("DON'T USE"), 89: libc.CString("MELTING"), 90: libc.CString("DUPLICATE"), 91: libc.CString("MATUREPLANT"), 92: libc.CString("CARDCASE"), 93: libc.CString("MOB_NOPICKUP"), 94: libc.CString("NOSTEAL"), 95: libc.CString("RESTRING"), 96: libc.CString("\n")}
var apply_types [47]*byte = [47]*byte{libc.CString("NONE"), libc.CString("STR"), libc.CString("AGL"), libc.CString("INT"), libc.CString("WIS"), libc.CString("CON"), libc.CString("SPD"), libc.CString("CLASS"), libc.CString("LEVEL"), libc.CString("AGE"), libc.CString("CHAR_WEIGHT"), libc.CString("CHAR_HEIGHT"), libc.CString("MAXKI"), libc.CString("MAXPL"), libc.CString("MAXST"), libc.CString("GOLD"), libc.CString("EXP"), libc.CString("ARMOR"), libc.CString("FISHBONUS"), libc.CString("DAMAGE"), libc.CString("REGEN RATE"), libc.CString("AUTO-TRAIN SKILL"), libc.CString("LIFEFORCE MAX"), libc.CString("UNUSED3"), libc.CString("UNUSED4"), libc.CString("RACE"), libc.CString("TURN_LEVEL"), libc.CString("SPELL_LEVEL_0"), libc.CString("SPELL_LEVEL_1"), libc.CString("SPELL_LEVEL_2"), libc.CString("SPELL_LEVEL_3"), libc.CString("SPELL_LEVEL_4"), libc.CString("SPELL_LEVEL_5"), libc.CString("SPELL_LEVEL_6"), libc.CString("SPELL_LEVEL_7"), libc.CString("SPELL_LEVEL_8"), libc.CString("SPELL_LEVEL_9"), libc.CString("MAX_KI"), libc.CString("FORTITUDE"), libc.CString("REFLEX"), libc.CString("WILL"), libc.CString("SKILL"), libc.CString("FEAT"), libc.CString("ALL_SAVES"), libc.CString("RESISTANCE"), libc.CString("ALL_STATS"), libc.CString("\n")}
var container_bits [5]*byte = [5]*byte{libc.CString("CLOSEABLE"), libc.CString("PICKPROOF"), libc.CString("CLOSED"), libc.CString("LOCKED"), libc.CString("\n")}
var drinks [17]*byte = [17]*byte{libc.CString("water"), libc.CString("beer"), libc.CString("wine"), libc.CString("ale"), libc.CString("dark ale"), libc.CString("whisky"), libc.CString("lemonade"), libc.CString("firebreather"), libc.CString("local speciality"), libc.CString("juice"), libc.CString("milk"), libc.CString("tea"), libc.CString("coffee"), libc.CString("blood"), libc.CString("salt water"), libc.CString("clear water"), libc.CString("\n")}
var material_names [48]*byte = [48]*byte{libc.CString("bone"), libc.CString("ceramic"), libc.CString("copper"), libc.CString("diamond"), libc.CString("gold"), libc.CString("iron"), libc.CString("leather"), libc.CString("mithril"), libc.CString("obsidian"), libc.CString("steel"), libc.CString("stone"), libc.CString("silver"), libc.CString("wood"), libc.CString("glass"), libc.CString("organic material"), libc.CString("currency"), libc.CString("paper"), libc.CString("cotton"), libc.CString("satin"), libc.CString("silk"), libc.CString("burlap"), libc.CString("velvet"), libc.CString("platinum"), libc.CString("adamantine"), libc.CString("wool"), libc.CString("onyx"), libc.CString("ivory"), libc.CString("brass"), libc.CString("marble"), libc.CString("bronze"), libc.CString("kachin"), libc.CString("ruby"), libc.CString("sapphire"), libc.CString("emerald"), libc.CString("gemstone"), libc.CString("granite"), libc.CString("energy"), libc.CString("hemp"), libc.CString("crystal"), libc.CString("earth"), libc.CString("liquid"), libc.CString("cloth"), libc.CString("metal"), libc.CString("wax"), libc.CString("other"), libc.CString("food material"), libc.CString("oil"), libc.CString("\n")}
var domains [38]*byte = [38]*byte{0: libc.CString("Undefined"), 1: libc.CString("Air"), 2: libc.CString("Animal"), 3: libc.CString("Chaos"), 4: libc.CString("Death"), 5: libc.CString("Destruction"), 6: libc.CString("Earth"), 7: libc.CString("Evil"), 8: libc.CString("Fire"), 9: libc.CString("Good"), 10: libc.CString("Healing"), 11: libc.CString("Knowledge"), 12: libc.CString("Law"), 13: libc.CString("Luck"), 14: libc.CString("Magic"), 15: libc.CString("Plant"), 16: libc.CString("Protection"), 17: libc.CString("Strength"), 18: libc.CString("Sun"), 19: libc.CString("Travel"), 20: libc.CString("Trickery"), 21: libc.CString("War"), 22: libc.CString("Water"), 23: libc.CString("\n")}
var schools [11]*byte = [11]*byte{libc.CString("Undefined"), libc.CString("Abjuration"), libc.CString("Conjuration"), libc.CString("Divination"), libc.CString("Enchantment"), libc.CString("Evocation"), libc.CString("Illusion"), libc.CString("Necromancy"), libc.CString("Transmutation"), libc.CString("Universal"), libc.CString("\n")}
var history_types [11]*byte = [11]*byte{libc.CString("all"), libc.CString("say"), libc.CString("ooc"), libc.CString("wiznet"), libc.CString("tell"), libc.CString("shout"), libc.CString("grats"), libc.CString("holler"), libc.CString("newbie"), libc.CString("snet"), libc.CString("\n")}
var AssemblyTypes [12]*byte = [12]*byte{libc.CString("Don't Use"), libc.CString("Don't Use"), libc.CString("build"), libc.CString("Don't Use"), libc.CString("Don't Use"), libc.CString("Don't Use"), libc.CString("Don't Use"), libc.CString("Don't Use"), libc.CString("Don't Use"), libc.CString("Don't Use"), libc.CString("Don't Use"), libc.CString("\n")}
var drinknames [17]*byte = [17]*byte{libc.CString("water"), libc.CString("beer"), libc.CString("wine"), libc.CString("ale"), libc.CString("ale"), libc.CString("whisky"), libc.CString("lemonade"), libc.CString("firebreather"), libc.CString("local"), libc.CString("juice"), libc.CString("milk"), libc.CString("tea"), libc.CString("coffee"), libc.CString("blood"), libc.CString("salt"), libc.CString("water"), libc.CString("\n")}
var drink_aff [16][3]int = [16][3]int{{0, 0, 5}, {3, 1, 1}, {3, 1, 1}, {3, 0, 2}, {4, 0, 2}, {6, 0, 0}, {0, 0, 4}, {6, 0, 0}, {0, 0, 3}, {0, 0, 4}, {0, 1, 3}, {0, 0, 3}, {0, 0, 3}, {0, 0, 2}, {0, 0, 1}, {0, 0, 8}}
var color_liquid [17]*byte = [17]*byte{libc.CString("clear"), libc.CString("brown"), libc.CString("clear"), libc.CString("brown"), libc.CString("dark"), libc.CString("golden"), libc.CString("red"), libc.CString("green"), libc.CString("brown"), libc.CString("light green"), libc.CString("white"), libc.CString("brown"), libc.CString("black"), libc.CString("red"), libc.CString("clear"), libc.CString("crystal clear"), libc.CString("\n")}
var fullness [6]*byte = [6]*byte{libc.CString("empty "), libc.CString("less than half "), libc.CString("half full "), libc.CString("more than half full "), libc.CString("full "), libc.CString("")}
var trig_types [21]*byte = [21]*byte{libc.CString("Global"), libc.CString("Random"), libc.CString("Command"), libc.CString("Speech"), libc.CString("Act"), libc.CString("Death"), libc.CString("Greet"), libc.CString("Greet-All"), libc.CString("Entry"), libc.CString("Receive"), libc.CString("Fight"), libc.CString("HitPrcnt"), libc.CString("Bribe"), libc.CString("Load"), libc.CString("Memory"), libc.CString("Cast"), libc.CString("Leave"), libc.CString("Door"), libc.CString("UNUSED"), libc.CString("Time"), libc.CString("\n")}
var otrig_types [21]*byte = [21]*byte{libc.CString("Global"), libc.CString("Random"), libc.CString("Command"), libc.CString("UNUSED"), libc.CString("UNUSED"), libc.CString("Timer"), libc.CString("Get"), libc.CString("Drop"), libc.CString("Give"), libc.CString("Wear"), libc.CString("UNUSED"), libc.CString("Remove"), libc.CString("UNUSED"), libc.CString("Load"), libc.CString("UNUSED"), libc.CString("Cast"), libc.CString("Leave"), libc.CString("UNUSED"), libc.CString("Consume"), libc.CString("Time"), libc.CString("\n")}
var wtrig_types [21]*byte = [21]*byte{libc.CString("Global"), libc.CString("Random"), libc.CString("Command"), libc.CString("Speech"), libc.CString("UNUSED"), libc.CString("Zone Reset"), libc.CString("Enter"), libc.CString("Drop"), libc.CString("UNUSED"), libc.CString("UNUSED"), libc.CString("UNUSED"), libc.CString("UNUSED"), libc.CString("UNUSED"), libc.CString("UNUSED"), libc.CString("UNUSED"), libc.CString("Cast"), libc.CString("Leave"), libc.CString("Door"), libc.CString("UNUSED"), libc.CString("Time"), libc.CString("\n")}
var size_names [10]*byte = [10]*byte{libc.CString("fine"), libc.CString("diminutive"), libc.CString("tiny"), libc.CString("small"), libc.CString("medium"), libc.CString("large"), libc.CString("huge"), libc.CString("gargantuan"), libc.CString("colossal"), libc.CString("\n")}
var rev_dir [12]int = [12]int{SOUTH, WEST, NORTH, EAST, DOWN, UP, SOUTHEAST, SOUTHWEST, NORTHWEST, NORTHEAST, OUTDIR, INDIR}
var movement_loss [15]int = [15]int{0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1}
var weekdays [7]*byte = [7]*byte{libc.CString("Sunday"), libc.CString("Monday"), libc.CString("Tuesday"), libc.CString("Wednesday"), libc.CString("Thursday"), libc.CString("Friday"), libc.CString("Saturday")}
var month_name [12]*byte = [12]*byte{libc.CString("Month of January"), libc.CString("Month of February"), libc.CString("Month of March"), libc.CString("Month of April"), libc.CString("Month of May"), libc.CString("Month of June"), libc.CString("Month of July"), libc.CString("Month of August"), libc.CString("Month of September"), libc.CString("Month of October"), libc.CString("Month of November"), libc.CString("Month of December")}
var wield_names [5]*byte = [5]*byte{libc.CString("if you were bigger"), libc.CString("with ease"), libc.CString("one-handed"), libc.CString("two-handed"), libc.CString("\n")}
var admin_level_names [8]*byte = [8]*byte{libc.CString("Mortal"), libc.CString("Enforcer"), libc.CString("1st C. Enforcer"), libc.CString("High Enforcer"), libc.CString("Vice-Admin"), libc.CString("Admin"), libc.CString("Implementor"), libc.CString("\n")}
var racial_aging_data [24]aging_data = [24]aging_data{{Adult: 15, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 35, Old: 53, Venerable: 70, Maxdice: [2]int{2, 20}}, {Adult: 110, Classdice: [3][2]int{{4, 6}, {6, 6}, {10, 6}}, Middle: 175, Old: 263, Venerable: 350, Maxdice: [2]int{4, 100}}, {Adult: 40, Classdice: [3][2]int{{4, 6}, {6, 6}, {9, 6}}, Middle: 100, Old: 150, Venerable: 200, Maxdice: [2]int{3, 100}}, {Adult: 40, Classdice: [3][2]int{{3, 6}, {5, 6}, {7, 6}}, Middle: 125, Old: 188, Venerable: 250, Maxdice: [2]int{2, 100}}, {Adult: 20, Classdice: [3][2]int{{1, 6}, {2, 6}, {3, 6}}, Middle: 62, Old: 93, Venerable: 125, Maxdice: [2]int{3, 20}}, {Adult: 20, Classdice: [3][2]int{{2, 4}, {3, 6}, {4, 6}}, Middle: 50, Old: 75, Venerable: 100, Maxdice: [2]int{5, 20}}, {Adult: 110, Classdice: [3][2]int{{4, 6}, {6, 6}, {10, 6}}, Middle: 175, Old: 263, Venerable: 350, Maxdice: [2]int{4, 100}}, {Adult: 14, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 30, Old: 45, Venerable: 60, Maxdice: [2]int{2, 10}}, {Adult: 14, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 30, Old: 45, Venerable: 60, Maxdice: [2]int{2, 10}}, {Adult: 110, Classdice: [3][2]int{{4, 6}, {6, 6}, {10, 6}}, Middle: 175, Old: 263, Venerable: 350, Maxdice: [2]int{4, 100}}, {Adult: 110, Classdice: [3][2]int{{4, 6}, {6, 6}, {10, 6}}, Middle: 175, Old: 263, Venerable: 350, Maxdice: [2]int{4, 100}}, {Adult: 110, Classdice: [3][2]int{{4, 6}, {6, 6}, {10, 6}}, Middle: 175, Old: 263, Venerable: 350, Maxdice: [2]int{4, 100}}, {Adult: 14, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 30, Old: 45, Venerable: 60, Maxdice: [2]int{2, 10}}, {Adult: 15, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 35, Old: 53, Venerable: 70, Maxdice: [2]int{2, 20}}, {Adult: 14, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 30, Old: 45, Venerable: 60, Maxdice: [2]int{2, 10}}, {Adult: 14, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 30, Old: 45, Venerable: 60, Maxdice: [2]int{2, 10}}, {Adult: 14, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 30, Old: 45, Venerable: 60, Maxdice: [2]int{2, 10}}, {Adult: 14, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 30, Old: 45, Venerable: 60, Maxdice: [2]int{2, 10}}, {Adult: 14, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 30, Old: 45, Venerable: 60, Maxdice: [2]int{2, 10}}, {Adult: 110, Classdice: [3][2]int{{4, 6}, {6, 6}, {10, 6}}, Middle: 175, Old: 263, Venerable: 350, Maxdice: [2]int{4, 100}}, {Adult: 14, Classdice: [3][2]int{{1, 4}, {1, 6}, {2, 6}}, Middle: 30, Old: 45, Venerable: 60, Maxdice: [2]int{2, 10}}, {Adult: 110, Classdice: [3][2]int{{4, 6}, {6, 6}, {10, 6}}, Middle: 175, Old: 263, Venerable: 350, Maxdice: [2]int{4, 100}}, {Adult: 110, Classdice: [3][2]int{{4, 6}, {6, 6}, {10, 6}}, Middle: 175, Old: 263, Venerable: 350, Maxdice: [2]int{4, 100}}, {Adult: 110, Classdice: [3][2]int{{4, 6}, {6, 6}, {10, 6}}, Middle: 175, Old: 263, Venerable: 350, Maxdice: [2]int{4, 100}}}
var admin_flag_names [20]*byte = [20]*byte{libc.CString("TellAll"), libc.CString("SeeInventory"), libc.CString("SeeSecret"), libc.CString("KnowWeather"), libc.CString("FullWhere"), libc.CString("Money"), libc.CString("EatAnything"), libc.CString("NoPoison"), libc.CString("WalkAnywhere"), libc.CString("NoKeys"), libc.CString("InstantKill"), libc.CString("NoSteal"), libc.CString("TransAll"), libc.CString("SwitchMortal"), libc.CString("ForceMass"), libc.CString("AllHouses"), libc.CString("NoDamage"), libc.CString("AllShops"), libc.CString("CEDIT"), libc.CString("\n")}
var spell_schools [11]*byte = [11]*byte{0: libc.CString("Abjuration"), 1: libc.CString("Conjuration"), 2: libc.CString("Divination"), 3: libc.CString("Enchantment"), 4: libc.CString("Evocation"), 5: libc.CString("Illusion"), 6: libc.CString("Necromancy"), 7: libc.CString("Transmutation"), 8: libc.CString("Universal"), 9: libc.CString("\n")}
var cchoice_names [17]*byte = [17]*byte{libc.CString("normal"), libc.CString("room names"), libc.CString("room objects"), libc.CString("room people"), libc.CString("someone hits you"), libc.CString("you hit someone"), libc.CString("other hit"), libc.CString("critical hit"), libc.CString("holler"), libc.CString("shout"), libc.CString("gossip channel"), libc.CString("auction channel"), libc.CString("congratulations"), libc.CString("tells"), libc.CString("you say"), libc.CString("room say"), libc.CString("\n")}
var room_bits_count uint64 = uint64(unsafe.Sizeof([67]*byte{})/unsafe.Sizeof((*byte)(nil)) - 1)
var action_bits_count uint64 = uint64(unsafe.Sizeof([36]*byte{})/unsafe.Sizeof((*byte)(nil)) - 1)
var affected_bits_count uint64 = uint64(unsafe.Sizeof([76]*byte{})/unsafe.Sizeof((*byte)(nil)) - 1)
var extra_bits_count uint64 = uint64(unsafe.Sizeof([96]*byte{})/unsafe.Sizeof((*byte)(nil)) - 1)
var wear_bits_count uint64 = uint64(unsafe.Sizeof([20]*byte{})/unsafe.Sizeof((*byte)(nil)) - 1)
var creation_methods [6]*byte = [6]*byte{libc.CString("[Standard - Random rolls, ordered assignment]"), libc.CString("[Player Assigned - Random rolls, player adjust to taste]"), libc.CString("[Points Pool - Player assigns scores from points pool]"), libc.CString("[Racial Template - All races start from template values, adjusted by class]"), libc.CString("[Class Template - All classes start from template values, adjusted by race]"), libc.CString("\n")}
var admin_flags [20]*byte = [20]*byte{libc.CString("You may use 'page all'"), libc.CString("You can see other players inventories"), libc.CString("You may see secret doors"), libc.CString("You may know weather data"), libc.CString("You know fully where this are"), libc.CString("You do not require money"), libc.CString("You can eat anything"), libc.CString("You cannot be poisoned"), libc.CString("You can walk anywhere"), libc.CString("You do not require keys"), libc.CString("You have the touch of death"), libc.CString("You cannot be stolen from"), libc.CString("You may use 'trans all'"), libc.CString("You can use 'switch'"), libc.CString("You may use 'force all'"), libc.CString("You may enter any house"), libc.CString("You do not take damage"), libc.CString("You may use any shop"), libc.CString("You may use cedit"), libc.CString("\n")}
